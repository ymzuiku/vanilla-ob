import immer from"immer";var observeOption={childList:!0,subtree:!0},appendWeak=new WeakMap,removeWeak=new WeakMap;function onAppend(t,e){var o;appendWeak.has(t)?appendWeak.get(t).push(e):(appendWeak.set(t,[e]),(o=new MutationObserver(function(e){var n;document.contains(t)&&(o.disconnect(),(n=appendWeak.get(t))&&n.forEach(function(e){return e()}),appendWeak.delete(t))})).observe(document,observeOption))}function onRemove(t,e){removeWeak.has(t)?removeWeak.get(t).push(e):(removeWeak.set(t,[e]),onAppend(t,function(){var n=new MutationObserver(function(){var e;document.contains(t)||(n.disconnect(),(e=removeWeak.get(t))&&e.forEach(function(e){return e()}),removeWeak.delete(t))});n.observe(document,observeOption)}))}var Ob=function(e){var r=new Map;return r.state=immer(e,function(e){}),r.use=function(e,n,t){onRemove(e,function(){r.delete(e)});n={getMemo:n,memo:n(r.state),update:t};t.apply(void 0,n.memo),r.set(e,n)},r.next=function(a){r.forEach(function(e){r.state=immer(r.state,function(e){a(e)});for(var n=e.getMemo(r.state),t=!1,o=0;o<n.length;o++)if(n[o]!==e.memo[o]){t=!0;break}t&&(e.memo=n,e.update.apply(e,e.memo))})},r};export{Ob};
//# sourceMappingURL=index.js.map
